pipeline {
    agent any  

    tools {
        maven 'Maven 3.8.1'  // Cambia esto por la versión de Maven instalada en Jenkins
        jdk 'jdk11'           // Cambia esto por la versión de JDK configurada en Jenkins
    }

    stages {
        // Etapa para clonar el repositorio
        stage('Clonar Repositorio') {
            steps {
                git 'https://github.com/MiltonEduardoHernandez/Infraestructura.git'
            }
        }
        
        // Etapa para compilar el proyecto con Maven
        stage('Compilación') {
            steps {
                sh 'mvn clean compile'
            }
        }

        // Etapa para ejecutar pruebas automatizadas
        stage('Pruebas') {
            steps {
                sh 'mvn test'
            }
        }

        // Etapa para construir un paquete (ejemplo: .jar o .war)
        stage('Construir Paquete') {
            steps {
                sh 'mvn package'
            }
        }

        // Etapa para construir la imagen Docker
        stage('Construcción Docker') {
            steps {
                script {
                    sh 'docker build -t my-app .'
                }
            }
        }

        // Etapa para desplegar la imagen Docker
        stage('Despliegue') {
            steps {
                script {
                    sh 'docker run -d -p 8080:8080 my-app'
                }
            }
        }

        // Etapa para mostrar que todo se ejecutó correctamente
        stage('Resultado') {
            steps {
                echo 'Pipeline ejecutado correctamente con Maven y Docker.'
            }
        }
    }

    post {
        always {
            cleanWs() // Limpiar el workspace después del job
        }
    }
}
